<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhibinwang.dt.mapper.TTransactionalMessageMapper">
    <resultMap id="BaseResultMap" type="com.zhibinwang.dt.model.TTransactionalMessage">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="edit_time" property="editTime" jdbcType="TIMESTAMP"/>
        <result column="creator" property="creator" jdbcType="VARCHAR"/>
        <result column="editor" property="editor" jdbcType="VARCHAR"/>
        <result column="deleted" property="deleted" jdbcType="TINYINT"/>
        <result column="current_retry_times" property="currentRetryTimes" jdbcType="TINYINT"/>
        <result column="max_retry_times" property="maxRetryTimes" jdbcType="TINYINT"/>
        <result column="queue_name" property="queueName" jdbcType="VARCHAR"/>
        <result column="exchange_name" property="exchangeName" jdbcType="VARCHAR"/>
        <result column="exchange_type" property="exchangeType" jdbcType="VARCHAR"/>
        <result column="routing_key" property="routingKey" jdbcType="VARCHAR"/>
        <result column="business_module" property="businessModule" jdbcType="VARCHAR"/>
        <result column="business_key" property="businessKey" jdbcType="VARCHAR"/>
        <result column="next_schedule_time" property="nextScheduleTime" jdbcType="TIMESTAMP"/>
        <result column="message_status" property="messageStatus" jdbcType="TINYINT"/>
        <result column="init_backoff" property="initBackoff" jdbcType="BIGINT"/>
        <result column="backoff_factor" property="backoffFactor" jdbcType="TINYINT"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, create_time, edit_time, creator, editor, deleted, current_retry_times, max_retry_times, 
    queue_name, exchange_name, exchange_type, routing_key, business_module, business_key, 
    next_schedule_time, message_status, init_backoff, backoff_factor
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.zhibinwang.dt.model.TTransactionalMessageExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_transactional_message
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
      <if test="limitNumber != null">
            limit #{limitNumber}
      </if>

    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from t_transactional_message
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_transactional_message
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="com.zhibinwang.dt.model.TTransactionalMessageExample">
        delete from t_transactional_message
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.zhibinwang.dt.model.TTransactionalMessage">
    insert into t_transactional_message (id, create_time, edit_time, 
      creator, editor, deleted, 
      current_retry_times, max_retry_times, queue_name, 
      exchange_name, exchange_type, routing_key, 
      business_module, business_key, next_schedule_time, 
      message_status, init_backoff, backoff_factor
      )
    values (#{id,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{editTime,jdbcType=TIMESTAMP}, 
      #{creator,jdbcType=VARCHAR}, #{editor,jdbcType=VARCHAR}, #{deleted,jdbcType=TINYINT}, 
      #{currentRetryTimes,jdbcType=TINYINT}, #{maxRetryTimes,jdbcType=TINYINT}, #{queueName,jdbcType=VARCHAR}, 
      #{exchangeName,jdbcType=VARCHAR}, #{exchangeType,jdbcType=VARCHAR}, #{routingKey,jdbcType=VARCHAR}, 
      #{businessModule,jdbcType=VARCHAR}, #{businessKey,jdbcType=VARCHAR}, #{nextScheduleTime,jdbcType=TIMESTAMP}, 
      #{messageStatus,jdbcType=TINYINT}, #{initBackoff,jdbcType=BIGINT}, #{backoffFactor,jdbcType=TINYINT}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.zhibinwang.dt.model.TTransactionalMessage">
        insert into t_transactional_message
        <selectKey keyProperty="id" resultType="long">
            select LAST_INSERT_ID()
        </selectKey>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="editTime != null">
                edit_time,
            </if>
            <if test="creator != null">
                creator,
            </if>
            <if test="editor != null">
                editor,
            </if>
            <if test="deleted != null">
                deleted,
            </if>
            <if test="currentRetryTimes != null">
                current_retry_times,
            </if>
            <if test="maxRetryTimes != null">
                max_retry_times,
            </if>
            <if test="queueName != null">
                queue_name,
            </if>
            <if test="exchangeName != null">
                exchange_name,
            </if>
            <if test="exchangeType != null">
                exchange_type,
            </if>
            <if test="routingKey != null">
                routing_key,
            </if>
            <if test="businessModule != null">
                business_module,
            </if>
            <if test="businessKey != null">
                business_key,
            </if>
            <if test="nextScheduleTime != null">
                next_schedule_time,
            </if>
            <if test="messageStatus != null">
                message_status,
            </if>
            <if test="initBackoff != null">
                init_backoff,
            </if>
            <if test="backoffFactor != null">
                backoff_factor,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="editTime != null">
                #{editTime,jdbcType=TIMESTAMP},
            </if>
            <if test="creator != null">
                #{creator,jdbcType=VARCHAR},
            </if>
            <if test="editor != null">
                #{editor,jdbcType=VARCHAR},
            </if>
            <if test="deleted != null">
                #{deleted,jdbcType=TINYINT},
            </if>
            <if test="currentRetryTimes != null">
                #{currentRetryTimes,jdbcType=TINYINT},
            </if>
            <if test="maxRetryTimes != null">
                #{maxRetryTimes,jdbcType=TINYINT},
            </if>
            <if test="queueName != null">
                #{queueName,jdbcType=VARCHAR},
            </if>
            <if test="exchangeName != null">
                #{exchangeName,jdbcType=VARCHAR},
            </if>
            <if test="exchangeType != null">
                #{exchangeType,jdbcType=VARCHAR},
            </if>
            <if test="routingKey != null">
                #{routingKey,jdbcType=VARCHAR},
            </if>
            <if test="businessModule != null">
                #{businessModule,jdbcType=VARCHAR},
            </if>
            <if test="businessKey != null">
                #{businessKey,jdbcType=VARCHAR},
            </if>
            <if test="nextScheduleTime != null">
                #{nextScheduleTime,jdbcType=TIMESTAMP},
            </if>
            <if test="messageStatus != null">
                #{messageStatus,jdbcType=TINYINT},
            </if>
            <if test="initBackoff != null">
                #{initBackoff,jdbcType=BIGINT},
            </if>
            <if test="backoffFactor != null">
                #{backoffFactor,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.zhibinwang.dt.model.TTransactionalMessageExample"
            resultType="java.lang.Integer">
        select count(*) from t_transactional_message
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_transactional_message
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.editTime != null">
                edit_time = #{record.editTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.creator != null">
                creator = #{record.creator,jdbcType=VARCHAR},
            </if>
            <if test="record.editor != null">
                editor = #{record.editor,jdbcType=VARCHAR},
            </if>
            <if test="record.deleted != null">
                deleted = #{record.deleted,jdbcType=TINYINT},
            </if>
            <if test="record.currentRetryTimes != null">
                current_retry_times = #{record.currentRetryTimes,jdbcType=TINYINT},
            </if>
            <if test="record.maxRetryTimes != null">
                max_retry_times = #{record.maxRetryTimes,jdbcType=TINYINT},
            </if>
            <if test="record.queueName != null">
                queue_name = #{record.queueName,jdbcType=VARCHAR},
            </if>
            <if test="record.exchangeName != null">
                exchange_name = #{record.exchangeName,jdbcType=VARCHAR},
            </if>
            <if test="record.exchangeType != null">
                exchange_type = #{record.exchangeType,jdbcType=VARCHAR},
            </if>
            <if test="record.routingKey != null">
                routing_key = #{record.routingKey,jdbcType=VARCHAR},
            </if>
            <if test="record.businessModule != null">
                business_module = #{record.businessModule,jdbcType=VARCHAR},
            </if>
            <if test="record.businessKey != null">
                business_key = #{record.businessKey,jdbcType=VARCHAR},
            </if>
            <if test="record.nextScheduleTime != null">
                next_schedule_time = #{record.nextScheduleTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.messageStatus != null">
                message_status = #{record.messageStatus,jdbcType=TINYINT},
            </if>
            <if test="record.initBackoff != null">
                init_backoff = #{record.initBackoff,jdbcType=BIGINT},
            </if>
            <if test="record.backoffFactor != null">
                backoff_factor = #{record.backoffFactor,jdbcType=TINYINT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_transactional_message
        set id = #{record.id,jdbcType=BIGINT},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        edit_time = #{record.editTime,jdbcType=TIMESTAMP},
        creator = #{record.creator,jdbcType=VARCHAR},
        editor = #{record.editor,jdbcType=VARCHAR},
        deleted = #{record.deleted,jdbcType=TINYINT},
        current_retry_times = #{record.currentRetryTimes,jdbcType=TINYINT},
        max_retry_times = #{record.maxRetryTimes,jdbcType=TINYINT},
        queue_name = #{record.queueName,jdbcType=VARCHAR},
        exchange_name = #{record.exchangeName,jdbcType=VARCHAR},
        exchange_type = #{record.exchangeType,jdbcType=VARCHAR},
        routing_key = #{record.routingKey,jdbcType=VARCHAR},
        business_module = #{record.businessModule,jdbcType=VARCHAR},
        business_key = #{record.businessKey,jdbcType=VARCHAR},
        next_schedule_time = #{record.nextScheduleTime,jdbcType=TIMESTAMP},
        message_status = #{record.messageStatus,jdbcType=TINYINT},
        init_backoff = #{record.initBackoff,jdbcType=BIGINT},
        backoff_factor = #{record.backoffFactor,jdbcType=TINYINT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.zhibinwang.dt.model.TTransactionalMessage">
        update t_transactional_message
        <set>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="editTime != null">
                edit_time = #{editTime,jdbcType=TIMESTAMP},
            </if>
            <if test="creator != null">
                creator = #{creator,jdbcType=VARCHAR},
            </if>
            <if test="editor != null">
                editor = #{editor,jdbcType=VARCHAR},
            </if>
            <if test="deleted != null">
                deleted = #{deleted,jdbcType=TINYINT},
            </if>
            <if test="currentRetryTimes != null">
                current_retry_times = #{currentRetryTimes,jdbcType=TINYINT},
            </if>
            <if test="maxRetryTimes != null">
                max_retry_times = #{maxRetryTimes,jdbcType=TINYINT},
            </if>
            <if test="queueName != null">
                queue_name = #{queueName,jdbcType=VARCHAR},
            </if>
            <if test="exchangeName != null">
                exchange_name = #{exchangeName,jdbcType=VARCHAR},
            </if>
            <if test="exchangeType != null">
                exchange_type = #{exchangeType,jdbcType=VARCHAR},
            </if>
            <if test="routingKey != null">
                routing_key = #{routingKey,jdbcType=VARCHAR},
            </if>
            <if test="businessModule != null">
                business_module = #{businessModule,jdbcType=VARCHAR},
            </if>
            <if test="businessKey != null">
                business_key = #{businessKey,jdbcType=VARCHAR},
            </if>
            <if test="nextScheduleTime != null">
                next_schedule_time = #{nextScheduleTime,jdbcType=TIMESTAMP},
            </if>
            <if test="messageStatus != null">
                message_status = #{messageStatus,jdbcType=TINYINT},
            </if>
            <if test="initBackoff != null">
                init_backoff = #{initBackoff,jdbcType=BIGINT},
            </if>
            <if test="backoffFactor != null">
                backoff_factor = #{backoffFactor,jdbcType=TINYINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.zhibinwang.dt.model.TTransactionalMessage">
    update t_transactional_message
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      edit_time = #{editTime,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=VARCHAR},
      editor = #{editor,jdbcType=VARCHAR},
      deleted = #{deleted,jdbcType=TINYINT},
      current_retry_times = #{currentRetryTimes,jdbcType=TINYINT},
      max_retry_times = #{maxRetryTimes,jdbcType=TINYINT},
      queue_name = #{queueName,jdbcType=VARCHAR},
      exchange_name = #{exchangeName,jdbcType=VARCHAR},
      exchange_type = #{exchangeType,jdbcType=VARCHAR},
      routing_key = #{routingKey,jdbcType=VARCHAR},
      business_module = #{businessModule,jdbcType=VARCHAR},
      business_key = #{businessKey,jdbcType=VARCHAR},
      next_schedule_time = #{nextScheduleTime,jdbcType=TIMESTAMP},
      message_status = #{messageStatus,jdbcType=TINYINT},
      init_backoff = #{initBackoff,jdbcType=BIGINT},
      backoff_factor = #{backoffFactor,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>